//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StrmExtract.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StrmExtract.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catch-up Mode (Experimental).
        /// </summary>
        public static string PluginOptions_CatchupMode_Catch_up_Mode__Experimental_ {
            get {
                return ResourceManager.GetString("PluginOptions_CatchupMode_Catch_up_Mode__Experimental_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract media info once new items are added for movies or series in favorites (Strm only). Default is OFF..
        /// </summary>
        public static string PluginOptions_CatchupMode_Catch_up_users_favorites__exclusive_to_Strm___Default_is_False_ {
            get {
                return ResourceManager.GetString("PluginOptions_CatchupMode_Catch_up_users_favorites__exclusive_to_Strm___Default_i" +
                        "s_False_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MediaInfo Extract.
        /// </summary>
        public static string PluginOptions_EditorTitle_Strm_Extract {
            get {
                return ResourceManager.GetString("PluginOptions_EditorTitle_Strm_Extract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Image Capture.
        /// </summary>
        public static string PluginOptions_EnableImageCapture_Enable_Image_Capture {
            get {
                return ResourceManager.GetString("PluginOptions_EnableImageCapture_Enable_Image_Capture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform image capture for videos without primary image. Default is False..
        /// </summary>
        public static string PluginOptions_EnableImageCapture_Perform_image_capture_for_videos_without_primary_image__Default_is_False_ {
            get {
                return ResourceManager.GetString("PluginOptions_EnableImageCapture_Perform_image_capture_for_videos_without_primary" +
                        "_image__Default_is_False_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include Extra.
        /// </summary>
        public static string PluginOptions_IncludeExtra_Include_Extra {
            get {
                return ResourceManager.GetString("PluginOptions_IncludeExtra_Include_Extra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include media extras to extract. Default is OFF..
        /// </summary>
        public static string PluginOptions_IncludeExtra_Include_media_extras_to_extract__Default_is_False_ {
            get {
                return ResourceManager.GetString("PluginOptions_IncludeExtra_Include_media_extras_to_extract__Default_is_False_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library Scope.
        /// </summary>
        public static string PluginOptions_LibraryScope_Library_Scope {
            get {
                return ResourceManager.GetString("PluginOptions_LibraryScope_Library_Scope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library scope to extract. Blank includes all..
        /// </summary>
        public static string PluginOptions_LibraryScope_Library_scope_to_extract__Blank_includes_all_ {
            get {
                return ResourceManager.GetString("PluginOptions_LibraryScope_Library_scope_to_extract__Blank_includes_all_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Concurrent Count.
        /// </summary>
        public static string PluginOptions_MaxConcurrentCount_Max_Concurrent_Count {
            get {
                return ResourceManager.GetString("PluginOptions_MaxConcurrentCount_Max_Concurrent_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max concurrent count of threads to extract media info. It must be between 1 to 10. Default is 1..
        /// </summary>
        public static string PluginOptions_MaxConcurrentCount_Max_Concurrent_Count_must_be_between_1_to_10__Default_is_1_ {
            get {
                return ResourceManager.GetString("PluginOptions_MaxConcurrentCount_Max_Concurrent_Count_must_be_between_1_to_10__De" +
                        "fault_is_1_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract media info of Strm only. Default is ON..
        /// </summary>
        public static string PluginOptions_StrmOnly_Extract_media_info_of_Strm_only__Default_is_True_ {
            get {
                return ResourceManager.GetString("PluginOptions_StrmOnly_Extract_media_info_of_Strm_only__Default_is_True_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strm Only.
        /// </summary>
        public static string PluginOptions_StrmOnly_Strm_Only {
            get {
                return ResourceManager.GetString("PluginOptions_StrmOnly_Strm_Only", resourceCulture);
            }
        }
    }
}
